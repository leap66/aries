apply plugin: 'com.android.application'

def gitVersionCode() {
    def cmd = 'git rev-list HEAD --first-parent --count'
    cmd.execute().text.trim().toInteger()
}

def gitVersionName() {
    def cmd = 'git describe --tags'
    def version = cmd.execute().text.trim()
    def pattern = "-(\\d+)-g"
    def matcher = version =~ pattern
    if (matcher) {
        version = version.substring(0, matcher.start()) + "." + matcher[0][1]
    } else if (version) {
        version = version + ".0"
    } else {
        version = 0.0
    }
    return version
}

android {
    compileSdkVersion 25
    buildToolsVersion "26.0.0"
    defaultConfig {
        applicationId "com.leap.aries"
        minSdkVersion 15
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        buildConfigField("String", "SERVER_URL", System.getenv("SERVER_URL") ?: "\"https://auth-test.1000sails.com/dpos-auth-web/s/\"")

        multiDexEnabled true

        manifestPlaceholders = [
                app_name       : "@string/app_name",
                PUSH_APP_KEY   : System.getenv('PUSH_APP_KEY') ?: "23647796",
                PUSH_APP_SECRET: System.getenv('PUSH_APP_SECRET') ?: "9b64e59efdc597abe0ec97cee3f5508c"
        ]

        ndk {
            moduleName "jniLib"
            abiFilters "armeabi", "armeabi-v7a", "x86"
        }

        println("------------------环境变量--------------")
        println("versionCode=" + gitVersionCode())
        println("versionName=" + gitVersionName())
        getBuildConfigFields().each { item ->
            println("KEY=" + item.key)
            println("VALUE=" + item.value.getValue())
        }
        println("------------------环境变量--------------")
    }
    signingConfigs {
        releaseConfig {
            storeFile file('/Users/ylwei/code/qianfan123/debug-keystore.jks')
            storePassword String.valueOf('123456')
            keyAlias String.valueOf('qianfan123.debug')
            keyPassword String.valueOf('123456')
            v2SigningEnabled false
        }
    }
    buildTypes {

        debug {
            applicationIdSuffix ".debug"
            signingConfig signingConfigs.releaseConfig
            manifestPlaceholders = [app_name: "Aries-测试"]
        }

        release {
            minifyEnabled true
            signingConfig signingConfigs.releaseConfig

            //Zipalign优化
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        branch {
            initWith(buildTypes.release)

            applicationIdSuffix ".branch"
            manifestPlaceholders = [app_name: "Aries-分支"]
            signingConfig signingConfigs.releaseConfig
        }
    }
    dataBinding {
        enabled = true
    }
    lintOptions {
        disable 'InvalidPackage'
        abortOnError false
    }
    applicationVariants.all { variant ->
        def versionCode = gitVersionCode()
        def versionName = variant.buildType.name + "." + versionCode
        if (variant.buildType.name == "release") {
            versionName = gitVersionName()
        }
        variant.mergedFlavor.versionCode = versionCode
        variant.mergedFlavor.versionName = versionName


        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                def fileName = "Aries-${variant.buildType.name}-${versionName}-${versionCode}.apk"
                output.outputFile = new File(outputFile.parent, fileName)
            }
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:2.0.1'
        def forceUpdate = System.getenv("ForceUpdate") ?: false
        if (forceUpdate) {
            resolutionStrategy.cacheChangingModulesFor 0, 'minutes'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:multidex:1.0.1'

}
